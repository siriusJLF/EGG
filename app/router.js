'use strict';

/**
 * @param {Egg.Application} app - egg application
 */
module.exports = app => {
  const { router, controller, io } = app;
  router.get('/issue.html', controller.home.pageIndex);
  router.get('/', controller.home.pageIndex);
  router.get('/login', controller.home.login);
  // 登录
  router.post('/login', controller.sign.doLogin);
  router.get('/loginOut', controller.sign.loginOut);
  router.get('/index/issue.html', controller.home.pageIndex);
  router.get('/index/menulist', controller.home.menulist);
  // 系统管理
  router.get('/systeam/userManageIn', controller.sign.sysUserManageIn);
  router.get('/systeam/sysUserAddIn', controller.sign.sysUserAddIn);
  router.get('/systeam/sysUserEditIn', controller.sign.sysUserEditIn);
  router.get('/systeam/sysUserEditPswIn', controller.sign.sysUserEditPswIn);
  router.get('/systeam/sysUserQuery', controller.sign.sysUserQuery);
  router.get('/systeam/sysUserRoleIn', controller.sign.sysUserRoleIn);
  router.get('/systeam/sysRoleQuery', controller.sign.sysRoleQuery);
  router.post('/systeam/sysRoleUpdate', controller.sign.sysRoleUpdate);
  router.post('/systeam/sysRoleAdd', controller.sign.sysRoleAdd);
  router.post('/systeam/sysUserUpdate', controller.sign.sysUserUpdate);
  router.post('/systeam/sysUserAdd', controller.sign.sysUserAdd);
  router.post('/systeam/netQueryName', controller.netnode.netQueryName);
  router.post('/systeam/sysUserPersonUpdate', controller.sign.sysUserPswUpdate);
  router.post('/systeam/sysPswUpdate', controller.sign.sysPswUpdate);
  router.post('/systeam/resetPassword', controller.sign.resetPassword);
  // 物料
  router.get('/ware/supplierAdd', controller.ware.supplierAdd);
  router.get('/ware/supplierDetail', controller.ware.supplierDetail);
  router.post('/ware/wareAdd', controller.ware.wareAdd);
  router.get('/ware/wareQuery', controller.ware.wareQuery);
  router.get('/ware/factoryAdd', controller.ware.factoryAdd);
  router.get('/ware/factoryManage', controller.ware.factoryManage);
  router.post('/ware/wareFactoryAdd', controller.ware.wareFactoryAdd);
  router.get('/ware/wareFactoryQuery', controller.ware.wareFactoryQuery);
  router.post('/ware/wareFactoryUpdate', controller.ware.wareFactoryUpdate);
  router.post('/ware/wareSupUpdate', controller.ware.wareSupUpdate);
  // 订单
  router.get('/ware/purchase', controller.publish.purchase);
  router.get('/ware/materialList', controller.ware.materialList);
  router.post('/ware/psamImport', controller.ware.psamImport);
  router.post('/ware/purchasedo', controller.ware.purchasedo);
  // 下拉
  router.post('/publish/queryUsage', controller.publish.queryUsage);
  router.post('/publish/wareSearchType', controller.publish.wareSearch);
  router.post('/publish/queryFactory', controller.ware.queryFactory);
  router.post('/systeam/queryRole', controller.sign.queryRole);
  // 发行
  router.get('/publish/purchase', controller.publish.purchase);
  router.get('/publish/inventory', controller.publish.inventory);
  router.get('/publish/inventoryList', controller.publish.inventoryList);
  router.get('/publish/cardApply', controller.publish.cardApply);
  router.get('/publish/cardApprove', controller.publish.cardApprove);
  router.get('/publish/issueList', controller.publish.issueList);
  router.get('/publish/issueDetail', controller.publish.issueDetail);
  router.get('/publish/receiveList', controller.publish.receiveList);
  router.get('/publish/receiveRecord', controller.publish.receiveRecord);
  router.post('/publish/psamApply', controller.publish.psamApply);
  router.get('/publish/applyRecord', controller.publish.applyRecord);
  router.post('/publish/approveDo', controller.publish.approveDo);
  router.get('/publish/queryAllManager', controller.publish.queryAllManager);
  router.get('/publish/queryUserByRoles', controller.publish.queryUserByRoles);
  router.get('/publish/queryIssue', controller.publish.queryIssue);
  router.get('/publish/queryIssueById', controller.publish.queryIssueById);
  router.post('/publish/psamInform', controller.publish.psamInformDo);
  router.post('/publish/psamConfirm', controller.publish.psamconfirmDo);
  router.post('/publish/psamLost', controller.publish.psamLost);
  router.post('/publish/psamUnLost', controller.publish.psamUnLost);
  router.post('/publish/psamRecovery', controller.publish.psamRecovery);
  // 组织结构
  router.get('/netnode/netManage', controller.netnode.netManage);
  router.post('/netnode/netList', controller.netnode.netList);
  router.get('/netnode/netTable', controller.netnode.netTable);
  router.post('/netnode/addCompany', controller.netnode.addCompany);
  router.post('/netnode/addRoad', controller.netnode.addRoad);
  router.post('/netnode/addStation', controller.netnode.addStation);
  router.post('/netnode/editNetNode', controller.netnode.editNetNode);
  router.get('/netnode/chanelTable', controller.netnode.queryChanelByManager);
  router.post('/netnode/chanelNotice', controller.netnode.chanelNotice);
  // 网点查询
  router.post('/publish/netListCompany', controller.publish.netListCompany);
  // 终端
  router.get('/terminal/eqmentIn', controller.terminal.eqmentIn);
  router.get('/terminal/applyIn', controller.terminal.applyIn);
  router.get('/terminal/listIn', controller.terminal.listIn);
  router.get('/terminal/modelQuery', controller.terminal.modelQuery);
  router.post('/terminal/moldeImport', controller.terminal.moldeImport);
  router.post('/terminal/addAuthModel', controller.terminal.addAuthModel);
  router.post('/terminal/moldelGrant', controller.terminal.moldelGrant);
  router.post('/terminal/updateAuthModel', controller.terminal.updateAuthModel);
  router.post('/terminal/authMoudleStop', controller.terminal.authMoudleStop);
  router.post('/terminal/authMoudleRecovery', controller.terminal.authMoudleRecovery);
  // 监控
  router.get('/monitor/monitorIn', controller.monitor.monitorIn);
  router.get('/monitor/monitorInG', controller.monitor.monitorInG);
  router.get('/monitor/monitorOptIn', controller.monitor.monitorOptIn);
  router.get('/monitor/queryStockIndex', controller.monitor.queryStockIndex);
  router.get('/monitor/chanelGateIn', controller.detail.chanelGateIn);
  router.get('/monitor/queryChanel24hInfo', controller.detail.queryChanel24hInfo);
  router.get('/monitor/queryGate24hInfo', controller.detail.queryGate24hInfo);
  router.get('/monitor/queryOfflineRateWarnning', controller.monitor.queryOfflineRateWarnning);
  router.get('/monitor/psamSignCntIn', controller.detail.psamSignCntIn);
  router.get('/monitor/queryMaxIpPsamCardChnl', controller.detail.queryMaxIpPsamCardChnl);
  router.get('/monitor/queryMaxIpPsamCardGate', controller.detail.queryMaxIpPsamCardGate);
  router.get('/monitor/queryMonitorSignline', controller.monitor.queryMonitorSignline);
  router.get('/monitor/queryMonitorGateline', controller.monitor.queryMonitorGateline);
  router.get('/monitor/queryAuthFrontTrace', controller.monitor.queryAuthFrontTrace);
  router.get('/monitor/queryPropo', controller.monitor.queryPropo);
  router.get('/monitor/queryOfflineAuthorizeCount', controller.monitor.queryOfflineAuthorizeCount);
  router.get('/monitor/queryGantryTradingVolume', controller.monitor.queryGantryTradingVolume);
  router.get('/monitor/queryAuthorizeTradingVolume', controller.monitor.queryAuthorizeTradingVolume);
  router.get('/monitor/querySignTradingVolume', controller.monitor.querySignTradingVolume);
  router.get('/monitor/getCpu', controller.monitor.getCpu);
  router.get('/monitor/queryChanelStatusCount', controller.monitor.queryChanelStatusCount);
  router.get('/monitor/queryGantryCount', controller.monitor.queryGantryCount);
  router.get('/monitor/queryOfflineTraceCount', controller.monitor.queryOfflineTraceCount);
  router.get('/monitor/queryStationStatusRepo', controller.monitor.queryStationStatusRepo);
  router.get('/monitor/queryPsamCount', controller.monitor.queryPsamCount);
  router.get('/monitor/queryPsamStatusStationCount', controller.monitor.queryPsamStatusStationCount);
  router.get('/monitor/queryNewestTenErrChanel', controller.monitor.queryNewestTenErrChanel);
  router.get('/monitor/queryPsamCountDetail', controller.monitor.queryPsamCountDetail);
  router.get('/monitor/getStationDetailMsg', controller.monitor.getStationDetailMsg);
  router.get('/monitor/queryPsamIssuedOrNotCount', controller.monitor.queryPsamIssuedOrNotCount);
  router.get('/monitor/queryPsamIssueOrNotCountDetail', controller.monitor.queryPsamIssueOrNotCountDetail);
  // 明细
  router.get('/detail/psamIn', controller.detail.psamDetailIn);
  router.get('/detail/chanelIn', controller.detail.chanelDetailIn);
  router.get('/detail/queryPsamCard', controller.detail.queryPsamCard);
  router.get('/line/queryAuthLine', controller.detail.queryAuthLine);
  router.get('/line/psamSignDetailIn', controller.detail.psamSignDetailIn);
  router.get('/line/querySignline', controller.detail.querySignline);
  router.get('/detail/chanelInstallIn', controller.detail.chanelInstallIn);
  router.get('/detail/sqqzInstallIn', controller.detail.sqqzInstallIn);
  router.get('/detail/queryChanelSetUp', controller.detail.queryChanelSetUp);
  router.get('/detail/queryFrontSetUp', controller.detail.queryFrontSetUp);
  router.get('/detail/installDoneIn', controller.detail.installDoneIn);
  router.get('/detail/queryProjectInfo', controller.detail.queryProjectInfo);
  router.get('/detail/sqzdIn', controller.detail.sqzdIn);
  router.get('/detail/queryAuthModelLine', controller.detail.queryAuthModelLine);
  router.get('/detail/queryAuthFrontInfo', controller.detail.queryAuthFrontInfo);
  router.get('/detail/psamStockIn', controller.detail.psamStockIn);
  router.get('/detail/countPsamStockInfo', controller.detail.countPsamStockInfo);
  router.get('/detail/psamMoveIn', controller.detail.psamMoveIn);
  router.get('/detail/queryResponsChange', controller.detail.queryResponsChange);
  router.get('/detail/queryResponsChangeIn', controller.detail.queryResponsChangeIn);
  router.get('/detail/queryResponsChangeOut', controller.detail.queryResponsChangeOut)
  router.post('/detail/responsChangeApply', controller.detail.responsChangeApply);
  router.post('/detail/cfmResponsChange', controller.detail.cfmResponsChange);
  router.get('/detail/gatelineIn', controller.detail.gatelineIn);
  router.get('/detail/queryGateline2', controller.detail.queryGateline2);
  router.get('/detail/psamApplyIn', controller.detail.psamApplyIn);
  router.get('/detail/psamAppMonitor4Excel', controller.detail.psamAppMonitor4Excel);

  // 明细报表下载
  router.post('/line/getAuthLineRecord', controller.detail.getAuthLineRecord);
  router.post('/line/getSignlineRecord', controller.detail.getSignlineRecord);
  router.post('/line/downProjectList', controller.detail.downProjectList);
  router.post('/line/downAuthFrontInfo', controller.detail.downAuthFrontInfo);
  router.post('/line/downChanelSetUp', controller.detail.downChanelSetUp);
  router.post('/line/downPsamStockInfo', controller.detail.downPsamStockInfo);
  router.post('/line/downGateline2', controller.detail.downGateline2);
  router.post('/detail/downloadAppMonitor4Excel', controller.detail.downloadAppMonitor4Excel);
  router.post('/detail/downloadAppMonitorDtl4Excel', controller.detail.downloadAppMonitorDtl4Excel);
  // 错误
  router.get('/erro/412', controller.home.erro);
  // socket.io
  // app.io.route('chat', app.io.controller.chat.index);
  // io.of('/exchange').route('exchange', io.controller.message.exchangeTest);
};
